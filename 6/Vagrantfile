# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$script = <<SCRIPT
  echo "-------------------- Updating Package Lists"
  apt-get update
  # gotta put this before the upgrade, b/c it reboots and then all commands are lost
  echo "-------------------- Install Supporting Software"
  sudo apt install software-properties-common -y

  echo "-------------------- Add Deadsnakes PPA"
  sudo add-apt-repository ppa:deadsnakes/ppa

  echo "-------------------- Updating Package Lists"
  sudo apt-get update

  echo "-------------------- Install Python3 and python3-pip"
  sudo apt install python3.9 python3-pip -y

  echo "-------------------- Check Python Version"
  sudo python3 --version

  echo "-------------------- Check Pip Version"
  sudo pip3 --version

  echo "-------------------- Install dependencies to psycopg2"
  sudo apt install libpq-dev python3-dev -y

  echo "-------------------- Install psycopg2"
  sudo apt install python3-psycopg2 -y

  echo "-------------------- Install Django on Ubuntu"
  sudo pip3 install Django

  echo "-------------------- Check Django-Admin Version"
  sudo django-admin --version

  echo "-------------------- Create Work Directory /home/vagrant/data/"
  sudo mkdir -p /home/vagrant/data

  echo "-------------------- Permissions to WorkDirectory /home/vagrant/data/"
  sudo chown -R vagrant:vagrant /home/vagrant/data/
 
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "ubuntu/bionic64"

  # speed up apt-get
  #config.cache.auto_detect = true

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  #config.vm.box_url = "http://files.vagrantup.com/bionic64.box"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 8080, host: 8080

  # Run the shell script inline provisioner
  config.vm.provision "shell", inline: $script

  config.vm.provision "file", source: "../file.txt", destination: "/home/vagrant/data/file.txt"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network :private_network, ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network :public_network

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true

end
